{"version":3,"sources":["components/Home.js","components/Waiter.js","components/firebase.js","components/OrderItems.js","components/Kitchen.js","components/Err.js","components/Item.js","components/Menu.js","components/MenuList.js","components/OrderRow.js","components/Order.js","components/Food.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Waiter","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","OrderItems","React","Component","Kitchen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getOrders","e","firestore","ref","on","snapshot","state","val","console","log","componentDidMount","orders","OrderItems_OrderItems","Err","Item","item","onClick","setOrders","name","price","Menu","Products","filter","time","map","Item_Item","assign","key","MenuList","Menu_Menu","OrderRow","addExtras","setState","extrasPrice","length","_this2","ordersArray","order","i","content","flavor","react_select_esm","onChange","options","extra","ingredient","label","value","isMulti","Order","componentDidUpdate","prevProps","prevState","sum","sub","numTable","onSubmit","sendOrder","OrderRow_OrderRow","colSpan","type","orderNotes","Food","_React$Component","concat","toConsumableArray","preventDefault","collection","add","handleNotes","target","handleNumTable","table","contentValue","extrasValue","inherits","createClass","MenuList_MenuList","Order_Order","Navigation","react_router_dom","to","App","components_Navigation","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c86ebc79.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n    return (\n        <div>\n            <p>Home</p>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\n\nconst Waiter = () => {\n    return (\n        <div>\n            <h1>Mesero</h1>\n        </div>\n    );\n};\n\n\nexport default Waiter;","import firebase from 'firebase/app';\nimport 'firebase/firebase-firestore';\n\nvar config = {\n    apiKey: \"AIzaSyAKPkYLaegcUjtbMuwJsSVp0SUqqHq5mmQ\",\n    authDomain: \"burger-queen-1eb9a.firebaseapp.com\",\n    databaseURL: \"https://burger-queen-1eb9a.firebaseio.com\",\n    projectId: \"burger-queen-1eb9a\",\n    storageBucket: \"burger-queen-1eb9a.appspot.com\",\n    messagingSenderId: \"840604359126\",\n    appId: \"1:840604359126:web:785af717d770139c\"\n  };\n\n  // Initialize Firebase\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React from 'react';\n\nexport default class OrderItems extends React.Component {\n    render() {\n        return(\n            <div>\n                <h2>Table #</h2>\n                <ul>\n                    <li>\n                        <h3>Producto: </h3>\n                        <p>Hamburguesa</p>\n                    </li>\n                    <li>\n                        <h3>Contenido: </h3>\n                        <p>Res</p>\n                    </li>\n                    <li>\n                        <h3>Extras: </h3>\n                        <p>Queso</p>\n                    </li>\n                    <li>\n                        <h3>Notas: </h3>\n                        <p>Alguna notita</p>\n                    </li>\n                </ul>\n                <form>\n                    <button>Orden lista!</button>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport firebase from './firebase';\n// import { tsConstructorType } from '@babel/types';\nimport OrderItems from './OrderItems';\n\n\nexport default class Kitchen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orders: {},\n        }\n    }\n\n    getOrders = (e) => {\n        const ref = firebase.firestore().ref('orders');\n        ref.on('value', snapshot => {\n            const state = snapshot.val();\n            this.state(state);\n        });\n        console.log('DATA RETRIEVED');\n    }\n\n    componentDidMount = () => {\n        this.getOrders();\n    }\n\n    render(){\n        const { orders } = this.state;\n        return (\n            <div>\n                <h1>Kitchen</h1>\n                <OrderItems />\n            </div>\n        );\n    }\n};\n\n","import React from 'react';\n\nconst Err = () => {\n    return (\n        <div>\n            <p>Error: path does not exist </p>\n        </div>\n    );\n};\n\nexport default Err;","import React from 'react';\n\nexport default class Item extends React.Component {\n    render() {\n        const {item} = this.props;\n        return (\n            <div onClick={() => this.props.setOrders(item)}>\n                <p>{item.name}</p>\n                <p>${item.price}.00</p>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Products from '../data/products.json';\nimport Item from './Item';\n\nexport default class Menu extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>{this.props.name}</h1>\n                <div>\n                {Products.filter((item) => {\n                        return item.time === this.props.name\n                    })\n                    .map((item) => {\n                        return <Item item={item} key={item.key} {...this.props}/>\n                    })\n                    }\n                </div>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport Menu from '../components/Menu';\n\nexport default class MenuList extends React.Component {\n    render() {\n        return (\n            <div>\n                <Menu name='Desayuno' {...this.props}/>\n                <Menu name='Comida' {...this.props}/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Select from 'react-select';\n// import { tsConstructorType } from '@babel/types';\n\nexport default class OrderRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            extrasPrice: 0,\n        }\n    }\n    \n    addExtras = (e) => {\n        this.setState({\n            extrasPrice: e.length,\n        });\n    }\n\n    render() {\n        return (\n            this.props.ordersArray.map((order, i) => {\n                return (\n                    <tr key={order.name + '_' + i}>\n                        <td>{order.name}</td>\n                        <td>\n                            <select >\n                                {order.content.map((flavor, i) => {\n                                    return <option key={flavor + '_' + i}>{flavor}</option>\n                                })}\n                            </select>\n                        </td>\n                        <td>\n                            <Select\n                                onChange={this.addExtras}\n                                options={\n                                    order.extra.map((ingredient, i) => {\n                                        return { label: ingredient, value: i }\n                                    })\n                                }\n                                isMulti />\n                        </td>\n                        <td>${+order.price + +this.state.extrasPrice}.00</td>\n                        <td><button>Eliminar</button></td>\n                    </tr>\n                )\n            })\n\n        )\n    }\n}","import React from 'react';\nimport OrderRow from './OrderRow';\n\nexport default class Order extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sub: [],\n            sum: 0,\n        }\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        const { ordersArray } = this.props;\n        const { sum } = this.state;\n        if (prevProps.ordersArray.length !== ordersArray.length) {\n                this.setState({\n                    sum: +sum + +ordersArray[ordersArray.length -1].price,\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Pedido:</h1>\n                <form>\n                    <label>Mesa: </label>\n                    <select onChange={this.props.numTable}>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                    </select>\n                </form>\n                <form  onSubmit={this.props.sendOrder}>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Producto</th>\n                            <th>Sabor</th>\n                            <th>Extras</th>\n                            <th>Precio</th>\n                            <th>Eliminar</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <OrderRow\n                            ordersArray={this.props.ordersArray}/>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <th>Notas: </th>\n                            <td colSpan='5'>\n                                <input type='text' onChange={this.props.orderNotes}></input>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th colSpan='3' >Total:</th>\n                            <td>${this.state.sum}.00</td>\n                            <td>\n                                <button>Ordenar</button>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table>\n                </form>\n            </div>\n        )\n    }\n};","import React from 'react';\nimport firebase from './firebase';\nimport MenuList from '../components/MenuList';\nimport Order from '../components/Order';\n// import { isTerminatorless } from '@babel/types';\n\nexport class Food extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orders: [],\n            contentValue: 'Res',\n            extrasValue: null,\n            orderNotes: '',\n            table: '1',\n        }\n    }\n    setOrders = (order) => {\n        this.setState({\n            //orders: this.state.orders.push(order),\n            orders: [...this.state.orders, order],\n        }, () => console.log(\"orders\", this.state));\n    }\n\n    sendOrder = (e) => {\n        e.preventDefault();\n        const db = firebase.firestore();\n        const userRef = db.collection('orders').add({\n            order: this.state.orders.map( (order) => order.name +' extras + contenido')\n            /* product: this.state.orders[0].name,\n            content: this.state.orders[0].type === 'Hamburguesas' ? this.state.contentValue : null,\n            extras: this.state.extrasValue > 0 ? this.state.extrasValue.map((extra) => extra.label) : this.state.extrasValue,\n            notes: this.state.orderNotes,\n            table: this.state.table, */\n        })\n        console.log('sendOrder');\n    }\n    handleNotes = (e) => {\n        this.setState({\n            orderNotes: e.target.value\n        })\n    }\n\n    handleNumTable = (e) => {\n        this.setState({\n            table: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <MenuList setOrders={this.setOrders} />\n                <Order\n                    ordersArray={this.state.orders}\n                    sendOrder={this.sendOrder}\n                    orderNotes={this.handleNotes}\n                    numTable={this.handleNumTable}\n                />\n            </div>\n        );\n    }\n};\n\nexport default Food;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n    return (\n        <div>\n            <NavLink to='/'>Home</NavLink>\n            <NavLink to='/waiter'>Mesero</NavLink>\n            <NavLink to='/kitchen'>Cocina</NavLink>\n            <NavLink to='/food'>Food</NavLink>\n        </div>\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Waiter from './components/Waiter';\nimport Kitchen from './components/Kitchen';\nimport Err from './components/Err';\nimport Food from './components/Food';\nimport Navigation from './components/Navigation';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div>\n    <Navigation />\n      <Switch>\n        <Route path='/' component={Home} exact />\n        <Route path='/waiter' component={Waiter} />\n        <Route path='/kitchen' component={Kitchen} />\n        <Route path='/food' component={Food} />\n        <Route component={Err} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}